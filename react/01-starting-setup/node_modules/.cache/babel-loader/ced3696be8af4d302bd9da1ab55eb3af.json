{"ast":null,"code":"var _jsxFileName = \"/home/semandev/Documents/coding/practice/react/01-starting-setup/src/App.js\";\nimport ExpenseItem from \"./components/ExpenseItem\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  //? App 컴포넌트를 함수형 컴포넌트로 선언한 것이다.\n  //? index.js에서 이 App 컴포넌트를 메인 화면에 뿌려주고 있다.\n  return (\n    /*#__PURE__*/\n    //? 컴포넌트는 HTML 요소를 반환한다.\n    //! 이 것은 당연히 일반적인 자바스크립트 문법은 아니고 리액트 팀에서 개발한 JSX라는 파일을 반환하는 구문으로 자바스크립트에서 정상 동작한다.\n    _jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Let's get started!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(ExpenseItem, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(ExpenseItem, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(ExpenseItem, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 5\n    }, this) //? JSX는 JavaScript XML의 줄임말이다.\n    //? HTML은 XML이라고 할 수 있고, JS에서 XML(HTML) 구문을 사용하는 형식을 JSX라고 하며 JSX는 React의 실행 됫단에서 변환 과정을 거쳐 브라우저가 이해할 수 있도록 해석된다.\n    //? JSX는 개발자에게 친숙한 HTML로 작성할 수 있고, 실행 시 브라우저가 해석할 수 있는 코드로 변환되기 때문에 편리하다.\n\n  );\n}\n\n_c = App;\nexport default App; //? export default는 기본 값으로 내보내는 객체를 정의한다.\n//? export default로 내보내면 내보낸 이름 그 대로 import하여 사용 가능하다.(import App from App;)\n//! App.js라는 App 컴포넌트를 선언한 파일은 기본 값으로 App 컴포넌트(App 함수 컴포넌트)를 내보내서 다른 곳에서 불러와(import) 사용할 수 있도록 한다.\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["ExpenseItem","App"],"sources":["/home/semandev/Documents/coding/practice/react/01-starting-setup/src/App.js"],"sourcesContent":["import ExpenseItem from \"./components/ExpenseItem\";\n\nfunction App() {\n  //? App 컴포넌트를 함수형 컴포넌트로 선언한 것이다.\n  //? index.js에서 이 App 컴포넌트를 메인 화면에 뿌려주고 있다.\n  return (\n    //? 컴포넌트는 HTML 요소를 반환한다.\n    //! 이 것은 당연히 일반적인 자바스크립트 문법은 아니고 리액트 팀에서 개발한 JSX라는 파일을 반환하는 구문으로 자바스크립트에서 정상 동작한다.\n    <div>\n      <h2>Let's get started!</h2>\n      <ExpenseItem />\n      <ExpenseItem />\n      <ExpenseItem />\n    </div>\n    //? JSX는 JavaScript XML의 줄임말이다.\n    //? HTML은 XML이라고 할 수 있고, JS에서 XML(HTML) 구문을 사용하는 형식을 JSX라고 하며 JSX는 React의 실행 됫단에서 변환 과정을 거쳐 브라우저가 이해할 수 있도록 해석된다.\n    //? JSX는 개발자에게 친숙한 HTML로 작성할 수 있고, 실행 시 브라우저가 해석할 수 있는 코드로 변환되기 때문에 편리하다.\n  );\n}\n\nexport default App;\n//? export default는 기본 값으로 내보내는 객체를 정의한다.\n//? export default로 내보내면 내보낸 이름 그 대로 import하여 사용 가능하다.(import App from App;)\n//! App.js라는 App 컴포넌트를 선언한 파일은 기본 값으로 App 컴포넌트(App 함수 컴포넌트)를 내보내서 다른 곳에서 불러와(import) 사용할 수 있도록 한다.\n"],"mappings":";AAAA,OAAOA,WAAP,MAAwB,0BAAxB;;;AAEA,SAASC,GAAT,GAAe;EACb;EACA;EACA;IAAA;IACE;IACA;IACA;MAAA,wBACE;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADF,eAEE,QAAC,WAAD;QAAA;QAAA;QAAA;MAAA,QAFF,eAGE,QAAC,WAAD;QAAA;QAAA;QAAA;MAAA,QAHF,eAIE,QAAC,WAAD;QAAA;QAAA;QAAA;MAAA,QAJF;IAAA;MAAA;MAAA;MAAA;IAAA,QAHF,CASE;IACA;IACA;;EAXF;AAaD;;KAhBQA,G;AAkBT,eAAeA,GAAf,C,CACA;AACA;AACA"},"metadata":{},"sourceType":"module"}